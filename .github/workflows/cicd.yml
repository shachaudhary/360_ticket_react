name: CICD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image with Environment Variables
        run: |
          docker build --build-arg VITE_APP_BASE_URL=${{ secrets.VITE_APP_BASE_URL }} \
                       --build-arg VITE_APP_BASE_URL_AUTH=${{ secrets.VITE_APP_BASE_URL_AUTH }} \
                       --build-arg VITE_APP_X_API_Key=${{ secrets.VITE_APP_X_API_Key }} \
                       -t ${{ secrets.DOCKER_USERNAME }}/ticket-react:latest .

      - name: Publish Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/ticket-react:latest

  deploy:
    needs: build
    runs-on: ticket-react
    steps:
      - name: Pull Image from Docker Hub
        run: sudo docker pull ${{ secrets.DOCKER_USERNAME }}/ticket-react:latest 

      - name: Stop & Remove Old Container (if exists)
        run: |
          CONTAINER_ID=$(sudo docker ps -aq --filter "name=reactContainer")
          if [ -n "$CONTAINER_ID" ]; then
              echo "Stopping & removing old container..."
              sudo docker stop $CONTAINER_ID
              sudo docker rm -f $CONTAINER_ID
          else
              echo "No existing container found. Skipping removal."
          fi

      - name: Run Docker Container with ENV Variables
        run: |
          sudo docker run -d -p 3000:80 \
          --name reactContainer \
          -e VITE_APP_BASE_URL=${{ secrets.VITE_APP_BASE_URL }} \
          -e VITE_APP_BASE_URL_AUTH=${{ secrets.VITE_APP_BASE_URL_AUTH }} \
          -e VITE_APP_X_API_Key=${{ secrets.VITE_APP_X_API_Key }} \
          -e VITE_APP_X_API_KEY_V2=${{ secrets.VITE_APP_X_API_KEY_V2 }} \
          ${{ secrets.DOCKER_USERNAME }}/ticket-react:latest

      - name: Check Running Containers
        run: sudo docker ps